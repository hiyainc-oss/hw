name: Scala CI

on:
  push:
    branches:
      - github-packages
    tags:
      - 'v*'

  pull_request:


jobs:
  test:
    strategy:
      matrix:
        scala: ["2.11.12", "2.12.8", "2.13.1"]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v1

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Ivy
      uses: actions/cache@v1.0.0
      with:
        path: ~/.ivy2
        key: ${{ runner.os }}-${{ matrix.scala }}-ivy-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/project/**/*.scala') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.scala }}-ivy-

    - name: Cache SBT
      uses: actions/cache@v1.0.0
      with:
        path: ~/.sbt
        key: ${{ runner.os }}-${{ matrix.scala }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/project/**/*.scala') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.scala }}-sbt-

    - name: Cache Coursier
      uses: actions/cache@v1.0.0
      with:
        path: ~/.cache/coursier
        key: ${{ runner.os }}-${{ matrix.scala }}-coursier-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/project/**/*.scala') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.scala }}-coursier-

    - name: Set version
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/v\(.*\),\1,')
        echo "ThisBuild / version := \"$VERSION\"" > version.sbt

    - name: Run tests with coverage
      if: "! startsWith(matrix.scala, '2.13')"
      run: sbt ++$SCALA_VERSION ';package;coverage;test;coverageReport'
      env:
        SCALA_VERSION: ${{ matrix.scala }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # https://github.com/scoverage/sbt-scoverage/issues/295
    - name: Run tests (without coverage)
      if: startsWith(matrix.scala, '2.13')
      run: sbt ++$SCALA_VERSION ';package;test'
      env:
        SCALA_VERSION: ${{ matrix.scala }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish coverage report
      if: "! startsWith(matrix.scala, '2.13')"
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Publish
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/v\(.*\),\1,')
        echo "ThisBuild / version := \"$VERSION\"" > version.sbt
        sbt ++$SCALA_VERSION publish
      env:
        SCALA_VERSION: ${{ matrix.scala }}}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean up before caching
      run: |
        rm -fv $HOME/.ivy2/.sbt.ivy.lock
        find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
        find $HOME/.sbt        -name "*.lock"               -print -delete

  release:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: test

    steps:
      - name: Checkout source
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache SBT
        uses: actions/cache@v1.0.0
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-2.13.1-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/project/**/*.scala') }}
          restore-keys: |
            ${{ runner.os }}-2.13.1-sbt-

      - name: Release
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/v\(.*\),\1,')
          echo "ThisBuild / version := \"$VERSION\"" > version.sbt
          sbt release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

